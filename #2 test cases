#2 test cases

Съют: Кейсы на проверку запроса GET /posts?userId=&title=

Кейс #1

- Заголовок:
Проверка нижнего граничного значения userId

- Идея:
На сервере существует 100 постов, разбитых на группы по 10 записей на каждый userId. Всего имеется 10 userId.
Необходимо проверить как система реагирует на значения, граничащие с валидным диапазоном. Данный кейс проверяет выход за нижнее ГЗ.

- Предусловия:
На URL https://jsonplaceholder.typicode.com/posts расположено 100 записей разбитых на группы по 10 штук на каждый userId. Для проверки необходимо использовать Postman.

- Шаги:
1 - создайте новый GET запрос на URL https://jsonplaceholder.typicode.com/posts
2 - добавьте параметр userId
3 - установите этому параметру значение = 0
4 - отправьте запрос
5 - посмотрите на код и тело ответа

- Ожидаемый результат:
Код ответа 200 ОК
Тело ответа - пустой массив []

Кейс #2

- Заголовок:
Проверка верхнего граничного значения userId

- Идея:
На сервере существует 100 постов, разбитых на группы по 10 записей на каждый userId. Всего имеется 10 userId.
Необходимо проверить как система реагирует на значения, граничащие с валидным диапазоном. Данный кейс проверяет выход за верхнее ГЗ.

- Предусловия:
На URL https://jsonplaceholder.typicode.com/posts расположено 100 записей разбитых на группы по 10 штук на каждый userId. Для проверки необходимо использовать Postman.

- Шаги:
1 - создайте новый GET запрос на URL https://jsonplaceholder.typicode.com/posts
2 - добавьте параметр userId
3 - установите этому параметру значение = 11
4 - отправьте запрос
5 - посмотрите на код и тело ответа

- Ожидаемый результат:
Код ответа 200 ОК
Тело ответа - пустой массив []


Кейс #3

- Заголовок:
Проверка невалидного значения userId текстом

- Идея:
Согласно требованиям значение userId должно быть типа nubmer.
Необходимо проверить как система реагирует на значение userId, отличное от типа number. Данный кейс проверяет userId текстовым значением.

- Предусловия:
На URL https://jsonplaceholder.typicode.com/posts расположено 100 записей разбитых на группы по 10 штук на каждый userId. Для проверки необходимо использовать Postman.

- Шаги:
1 - Создайте новый GET запрос на URL https://jsonplaceholder.typicode.com/posts
2 - добавьте параметр userId
3 - установите этому параметру значение = qwerty
4 - отправьте запрос
5 - посмотрите на код и тело ответа

- Ожидаемый результат:
Код ответа 200 ОК
Тело ответа - пустой массив []

Кейс #4

- Заголовок:
Проверка невалидного значения userId символами

- Идея:
Согласно требованиям значение userId должно быть типа nubmer.
Необходимо проверить как система реагирует на значение userId, отличное от типа number. Данный кейс проверяет userId случайными символами.

- Предусловия:
На URL https://jsonplaceholder.typicode.com/posts расположено 100 записей разбитых на группы по 10 штук на каждый userId. Для проверки необходимо использовать Postman.

- Шаги:
1 - создайте новый GET запрос на URL https://jsonplaceholder.typicode.com/posts
2 - добавьте параметр userId
3 - установите этому параметру значение = !"No;%
4 - отправьте запрос
5 - посмотрите на код и тело ответа

- Ожидаемый результат:
Код ответа 200 ОК
Тело ответа - пустой массив []

Кейс #5

- Заголовок:
Проверка пустых значений userId и title

- Идея:
При пустых значениях userId и title не должно выводиться никаких записей.

- Предусловия:
На URL https://jsonplaceholder.typicode.com/posts расположено 100 записей разбитых на группы по 10 штук на каждый userId. Для проверки необходимо использовать Postman.

- Шаги:
1 - создайте новый GET запрос на URL https://jsonplaceholder.typicode.com/posts
2 - добавьте параметр userId, значение оставьте пустым
3 - добавьте параметр title, значение оставьте пустым
4 - отправьте запрос
5 - посмотрите на код и тело ответа

- Ожидаемый результат:
Код ответа 200 ОК
Тело ответа - пустой массив []

